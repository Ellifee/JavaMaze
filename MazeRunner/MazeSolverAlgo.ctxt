#BlueJ class context
comment0.target=MazeSolverAlgo
comment1.params=
comment1.target=MazeSolverAlgo()
comment1.text=\r\n\ Konstruktor\ f\u00FCr\ Objekte\ der\ Klasse\ MazeSolverAlgo\r\n
comment10.params=columns\ rows
comment10.target=void\ startMaze(int,\ int)
comment11.params=filepath
comment11.target=void\ loadMaze(java.lang.String)
comment12.params=
comment12.target=void\ endMaze()
comment13.params=
comment13.target=void\ printMaze()
comment14.params=
comment14.target=void\ clearMaze()
comment15.params=row\ column
comment15.target=boolean\ isInGrid(int,\ int)
comment16.params=row\ column
comment16.target=int[][]\ getNeighbours(int,\ int)
comment17.params=row\ col
comment17.target=java.lang.String\ gridElementToString(int,\ int)
comment18.params=came_from
comment18.target=int[][]\ generateResultPath(java.util.Map)
comment19.params=
comment19.target=int[][]\ myMazeSolver()
comment2.params=rows
comment2.target=void\ setDimRows(int)
comment20.params=
comment20.target=int[][]\ solveMaze()
comment21.params=
comment21.target=void\ main()
comment3.params=cols
comment3.target=void\ setDimCols(int)
comment4.params=col
comment4.target=void\ setStartCol(int)
comment5.params=row
comment5.target=void\ setStartRow(int)
comment6.params=col
comment6.target=void\ setEndCol(int)
comment7.params=row
comment7.target=void\ setEndRow(int)
comment8.params=row\ col
comment8.target=void\ setBlocked(int,\ int)
comment9.params=
comment9.target=void\ startMaze()
numComments=22
